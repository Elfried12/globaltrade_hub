generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// Rôle de l’expéditeur dans une conversation
enum Role {
  BUYER
  SUPPLIER
}

/// Statut d’une demande de mise en contact
enum ContactRequestStatus {
  PENDING
  ACCEPTED
  REFUSED
  CANCELLED
}

model ContactThread {
  id           String    @id @default(uuid())
  userId       String
  supplierId   String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  isArchived   Boolean   @default(false)

  messages     Message[]

  @@index([userId])
  @@index([supplierId])
  @@index([userId, supplierId])
}

model Message {
  id             String         @id @default(uuid())
  threadId       String
  senderId       String
  senderRole     Role
  content        String?
  attachmentUrl  String?
  sentAt         DateTime       @default(now())
  isRead         Boolean        @default(false)

  thread         ContactThread  @relation(fields: [threadId], references: [id], onDelete: Cascade)

  @@index([threadId])
  @@index([senderId])
}

model ContactRequest {
  id           String                @id @default(uuid())
  userId       String
  supplierId   String
  productId    String?
  status       ContactRequestStatus  @default(PENDING)
  createdAt    DateTime              @default(now())
  updatedAt    DateTime              @updatedAt
  respondedAt  DateTime?

  @@index([userId])
  @@index([supplierId])
  @@index([productId])
  @@index([userId, supplierId, productId])
}
